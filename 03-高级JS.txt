1.面向对象三大特征：封装，继承，多态；
2.构造函数
	优点：最大好处就是创建对象更方便了；		缺点：实例对象过多的话，会造成极大的内存浪费；
3.原型以及原型链的概念是由构造函数（书写不方便或者性能问题）引出来的；
	
4.继承：父对象循环，子对象引入封装方法叫拷贝。
5.构造函数的原型方法继承，拷贝继承是指，遍历循环构造函数的原型对象，将属性跟方法赋值给继承拷贝成员；
6.函数内的this指向；（由最终调用决定）
	普通函数调用 和 定时器函数 ：window;   	构造函数调用：实例对象； 	对象方法调用：该方法所属对象；	 事件绑定方法：绑定事件对象；
7.这三种方法主要是为了解决继承中的this指向；
  bind()方法核心作用是改变this的指向，并返回一个新的函数（不调用函数）；
  call()方法作用也是改变this的指向，直接调用函数；（o,函数参数）；

8.闭包的案例：

 <script>
        var hero = document.getElementById('hero');			
        var list = hero.children;
        for(var i =0;i<list.length;i++){
            var li = list[i];


		//不用闭包li.index = i


            //闭包实现
            (function(i) {
                li.onclick = function() {
                console.log(i);
		//console.log(this.index)
            }
            })(i)
        }
    </script>
但是不建议这么写，造成内存不能释放;

9.定时器工作原理 ：
	代码一次执行，先执行执行栈上的代码，执行完毕后才会执行任务队列上的代码任务；

  